You are given an array where each element represents the number of floors of the building. In one operation you can remove one floor from any building. After a certain number of operations, the number of floors of all buildings must be either zero or equal to some specific non-negative number ‘K’. You have to find a minimum number of operations required and a value of K.

Sample: arr = [1,3,4,7,8,9] .  Ans: minimum operations = 11. K=7. Final array: [0,0,0,7,7,7] 





void solve()
{   
  ll n ; cin>>n;
  vector<ll>a(n+1,0), ps(n+1,0);
  for(ll i=1; i<=n; i++){
    cin>>a[i];
    ps[i]+=ps[i-1]+a[i];

  }
  ll mini=INT_MAX,k=-1;
  for(ll i=1; i<=n;i++){
     ll curr= a[i];
     ll l=ps[i-1];
     ll r= (ps[n]-ps[i]) - (n-i)*curr;
     ll op=l+r;
     if(op < mini){
        mini=op;
        k=curr;
     }
  }
    cout<<mini<<" "<<k<<"\n";

}
